# Generated by Django 4.2.17 on 2024-12-07 07:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customers', '0007_alter_customer_email'),
        ('loans', '0002_add_risk_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='LoanApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_number', models.CharField(max_length=50, unique=True)),
                ('amount_requested', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('term_months', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('purpose', models.TextField()),
                ('employment_status', models.CharField(choices=[('EMPLOYED', 'Employed'), ('SELF_EMPLOYED', 'Self Employed'), ('BUSINESS_OWNER', 'Business Owner'), ('UNEMPLOYED', 'Unemployed'), ('RETIRED', 'Retired'), ('STUDENT', 'Student')], help_text='Current employment status', max_length=20)),
                ('monthly_income', models.DecimalField(decimal_places=2, help_text='Monthly income in base currency', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('other_loans', models.TextField(blank=True, help_text='Details of other active loans or financial commitments')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('IN_REVIEW', 'In Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('submitted_date', models.DateTimeField(blank=True, null=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('documents', models.JSONField(blank=True, help_text='List of supporting documents', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loan_applications', to='customers.customer')),
            ],
            options={
                'verbose_name': 'loan application',
                'verbose_name_plural': 'loan applications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoanConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_type', models.CharField(choices=[('PERSONAL', 'Personal Loan'), ('BUSINESS', 'Business Loan')], help_text='Type of loan this configuration applies to', max_length=20)),
                ('interest_rate', models.DecimalField(decimal_places=2, help_text='Annual interest rate as a percentage (e.g., 10.00 for 10%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('term_days', models.PositiveIntegerField(help_text='Loan term in days')),
                ('penalty_rate', models.DecimalField(decimal_places=2, help_text='Monthly penalty rate as a percentage (e.g., 10.00 for 10%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('effective_from', models.DateTimeField(default=django.utils.timezone.now, help_text='When these parameters become effective')),
                ('effective_to', models.DateTimeField(blank=True, help_text='When these parameters expire (null for current configuration)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loan_configs_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loan_configs_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-effective_from'],
            },
        ),
        migrations.CreateModel(
            name='RepaymentSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installment_number', models.IntegerField()),
                ('due_date', models.DateField()),
                ('principal_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('interest_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('penalty_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PARTIALLY_PAID', 'Partially Paid'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue')], default='PENDING', max_length=20)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['due_date', 'installment_number'],
            },
        ),
        migrations.CreateModel(
            name='RiskAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('HIGH_RISK', 'High Risk Application'), ('MULTIPLE_LOANS', 'Multiple Active Loans'), ('PAYMENT_PATTERN', 'Suspicious Payment Pattern'), ('RAPID_REQUESTS', 'Rapid Loan Requests'), ('AMOUNT_SPIKE', 'Unusual Amount Increase')], max_length=50)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=20)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, help_text='Additional details about the alert in JSON format', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this alert is still active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When this alert was resolved', null=True)),
                ('resolution_notes', models.TextField(blank=True, help_text='Notes about how the alert was resolved')),
                ('loan_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_alerts', to='loans.loanapplication')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('DISBURSEMENT', 'Disbursement'), ('REPAYMENT', 'Repayment'), ('PENALTY', 'Penalty'), ('WAIVER', 'Waiver')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REVERSED', 'Reversed')], default='PENDING', max_length=20)),
                ('reference_number', models.CharField(max_length=50, unique=True)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_details', models.JSONField(blank=True, help_text='Additional payment details in JSON format', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='loan',
            name='risk_factors',
            field=models.JSONField(blank=True, help_text='Detailed risk assessment factors', null=True),
        ),
        migrations.AddField(
            model_name='loan',
            name='risk_level',
            field=models.CharField(blank=True, choices=[('LOW', 'Low Risk'), ('MODERATE', 'Moderate Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='loan',
            name='risk_notes',
            field=models.TextField(blank=True, help_text='Additional notes about risk assessment', null=True),
        ),
        migrations.AddField(
            model_name='loan',
            name='risk_score',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Calculated risk score (0-100)', max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='loanproduct',
            name='auto_approve_above',
            field=models.DecimalField(decimal_places=2, default=80, help_text='Automatically approve loans with risk score above this value', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='loanproduct',
            name='auto_reject_below',
            field=models.DecimalField(decimal_places=2, default=30, help_text='Automatically reject loans with risk score below this value', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='loanproduct',
            name='high_risk_max_amount',
            field=models.DecimalField(decimal_places=2, help_text='Maximum amount for high-risk loans (score < 40)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='loanproduct',
            name='medium_risk_max_amount',
            field=models.DecimalField(decimal_places=2, help_text='Maximum amount for medium-risk loans (score 40-59)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='loanproduct',
            name='moderate_risk_max_amount',
            field=models.DecimalField(decimal_places=2, help_text='Maximum amount for moderate-risk loans (score 60-79)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.DeleteModel(
            name='LoanDocument',
        ),
        migrations.AddField(
            model_name='transaction',
            name='loan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loan_transactions', to='loans.loan'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='processed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loan_processed_transactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='transaction',
            name='repayment_schedule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedule_transactions', to='loans.repaymentschedule'),
        ),
        migrations.AddField(
            model_name='repaymentschedule',
            name='loan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loan_repayment_schedule', to='loans.loan'),
        ),
        migrations.AddField(
            model_name='loanapplication',
            name='loan_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='applications', to='loans.loanproduct'),
        ),
        migrations.AddField(
            model_name='loanapplication',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_applications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='loan',
            name='application',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='loan', to='loans.loanapplication'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['reference_number'], name='loans_trans_referen_82389f_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['loan', 'transaction_type', 'status'], name='loans_trans_loan_id_8798cf_idx'),
        ),
        migrations.AddIndex(
            model_name='riskalert',
            index=models.Index(fields=['loan_application', 'alert_type'], name='loans_riska_loan_ap_c7160e_idx'),
        ),
        migrations.AddIndex(
            model_name='riskalert',
            index=models.Index(fields=['severity', 'is_active'], name='loans_riska_severit_981240_idx'),
        ),
        migrations.AddIndex(
            model_name='riskalert',
            index=models.Index(fields=['created_at'], name='loans_riska_created_e05e55_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='repaymentschedule',
            unique_together={('loan', 'installment_number')},
        ),
        migrations.AddConstraint(
            model_name='loanconfig',
            constraint=models.CheckConstraint(check=models.Q(('effective_to__isnull', True), ('effective_to__gt', models.F('effective_from')), _connector='OR'), name='effective_to_after_from'),
        ),
    ]
